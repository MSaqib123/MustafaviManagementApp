@model MustafaviManagementApp.ViewModels.DashboardViewModel
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Dashboard";

    // serialize once
    var lowStockJson = JsonConvert.SerializeObject(Model.LowStockItems);
    var dailySalesJson = JsonConvert.SerializeObject(Model.DailySales);
    var weeklySalesJson = JsonConvert.SerializeObject(Model.WeeklySales);
    var dailyPurchJson = JsonConvert.SerializeObject(Model.DailyPurchases);
    var weeklyPurchJson = JsonConvert.SerializeObject(Model.WeeklyPurchases);

    // quick stats
    var lowSkuCount = Model.LowStockItems.Count;
    var totalRevenue = Model.Revenue;
    var totalEver = Model.TotalStock;
    var onHand = Model.RemainingStock;
}

<!-- include MDB CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.0/mdb.min.css" rel="stylesheet" />

<style>
    /* elevate the stat cards */
    .stat-card {
        border-radius: 0.75rem;
        box-shadow: 0 4px 16px rgba(0,0,0,0.1);
        transition: transform .2s;
    }

        .stat-card:hover {
            transform: translateY(-4px);
        }
    /* wrap each chart in a card */
    .chart-card {
        border-radius: 0.75rem;
        box-shadow: 0 4px 16px rgba(0,0,0,0.05);
        padding: 1rem;
        background: #fff;
    }
</style>

<div class="container py-4">
    <h2 class="mb-5 fw-bold text-center">📊 Mustafavi Management System</h2>

    <!-- Top-level stats -->
    <div class="row g-4 mb-5">
        <div class="col-6 col-md-3">
            <div class="stat-card bg-primary text-white d-flex flex-column align-items-center py-3">
                <i class="fas fa-boxes mb-3 fa-2x "></i>
                <h6>Total Ever Added</h6>
                <h3>@totalEver</h3>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card bg-success text-white d-flex flex-column align-items-center py-3">
                <i class="fas fa-warehouse fa-2x mb-3"></i>
                <h6>Currently On-hand</h6>
                <h3>@onHand</h3>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card bg-warning text-dark d-flex flex-column align-items-center py-3">
                <i class="fas fa-exclamation-triangle fa-2x mb-3"></i>
                <h6>Low-stock SKUs</h6>
                <h3>@lowSkuCount</h3>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card bg-info text-white d-flex flex-column align-items-center py-3">
                <i class="fas fa-dollar-sign mb-3 fa-2x"></i>
                <h6>Total Revenue</h6>
                <h3>@totalRevenue.ToString("F2")</h3>
            </div>
        </div>
    </div>

    <!-- Charts grid -->
    <div class="row g-4">
        <div class="col-lg-6">
            <div class="chart-card h-100">
                <h5 class="mb-3">Total Stock vs. Remaining</h5>
                <div id="stock-pie" style="height:350px;"></div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="chart-card h-100">
                <h5 class="mb-3">Low-stock Items (&lt;5)</h5>
                <div id="low-stock-bar" style="height:350px;"></div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="chart-card h-100">
                <h5 class="mb-3">Daily Sales (Last 7d)</h5>
                <div id="daily-sales" style="height:350px;"></div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="chart-card h-100">
                <h5 class="mb-3">Weekly Sales (Last 4w)</h5>
                <div id="weekly-sales" style="height:350px;"></div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="chart-card h-100">
                <h5 class="mb-3">Daily Purchases (Last 7d)</h5>
                <div id="daily-purchases" style="height:350px;"></div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="chart-card h-100">
                <h5 class="mb-3">Weekly Purchases (Last 4w)</h5>
                <div id="weekly-purchases" style="height:350px;"></div>
            </div>
        </div>

        <div class="col-12">
            <div class="chart-card">
                <h5 class="mb-3">Inventory Value vs. Revenue</h5>
                <div id="values-column" style="height:400px;"></div>
            </div>
        </div>
    </div>
</div>

<!-- MDBootstrap JS + Highcharts -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.0/mdb.min.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>

@section Scripts {
    <script>
        // ─── server data ─────────────────
        const totalStock      = @Model.TotalStock;
        const remainingStock  = @Model.RemainingStock;
        const lowStockItems   = @Html.Raw(lowStockJson);
        const dailySales      = @Html.Raw(dailySalesJson);
        const weeklySales     = @Html.Raw(weeklySalesJson);
        const dailyPurchases  = @Html.Raw(dailyPurchJson);
        const weeklyPurchases = @Html.Raw(weeklyPurchJson);
        const invVals = {
          total     : @Model.TotalInventoryValue,
          remaining : @Model.RemainingInventoryValue,
          revenue   : @Model.Revenue
        };

        const cat  = arr => arr.map(p => p.Period);
        const data = arr => arr.map(p => p.Value);

        // 1) pie
        Highcharts.chart('stock-pie', {
          chart: { type:'pie' },
          title: { text:'' },
          series:[{ name:'Units', data:[
            { name:'Total ever added',  y: totalStock },
            { name:'Currently on-hand', y: remainingStock }
          ]}],
          credits:{ enabled:false }
        });

        // 2) low-stock bar
        Highcharts.chart('low-stock-bar', {
          chart: { type:'column' },
          title:{ text:'' },
          xAxis:{ categories: lowStockItems.map(i=>i.MedicineName) },
          yAxis:{ title:{ text:'Units' } },
          series:[{ name:'Qty', data: lowStockItems.map(i=>i.Quantity) }],
          credits:{ enabled:false }
        });

        // 3) daily sales
        Highcharts.chart('daily-sales', {
          chart:{ type:'line' },
          title:{ text:'' },
          xAxis:{ categories: cat(dailySales) },
          yAxis:{ title:{ text:'PKR' } },
          series:[{ name:'Sales', data:data(dailySales) }],
          credits:{ enabled:false }
        });

        // 4) weekly sales
        Highcharts.chart('weekly-sales', {
          chart:{ type:'line' },
          title:{ text:'' },
          xAxis:{ categories: cat(weeklySales) },
          yAxis:{ title:{ text:'PKR' } },
          series:[{ name:'Sales', data:data(weeklySales) }],
          credits:{ enabled:false }
        });

        // 5) daily purchases
        Highcharts.chart('daily-purchases', {
          chart:{ type:'line' },
          title:{ text:'' },
          xAxis:{ categories: cat(dailyPurchases) },
          yAxis:{ title:{ text:'PKR' } },
          series:[{ name:'Purchases', data:data(dailyPurchases) }],
          credits:{ enabled:false }
        });

        // 6) weekly purchases
        Highcharts.chart('weekly-purchases', {
          chart:{ type:'line' },
          title:{ text:'' },
          xAxis:{ categories: cat(weeklyPurchases) },
          yAxis:{ title:{ text:'PKR' } },
          series:[{ name:'Purchases', data:data(weeklyPurchases) }],
          credits:{ enabled:false }
        });

        // 7) inventory vs revenue
        Highcharts.chart('values-column', {
          chart:{ type:'column' },
          title:{ text:'' },
          xAxis:{ categories:[
            'Total Purchase Cost',
            'Remaining Inventory',
            'Revenue Earned'
          ]},
          yAxis:{ title:{ text:'PKR' } },
          series:[{ name:'Amount', data:[
            invVals.total, invVals.remaining, invVals.revenue
          ]}],
          credits:{ enabled:false }
        });
    </script>
}
