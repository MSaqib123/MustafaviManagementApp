"use strict";import PlotLineOrBandAxis from"./PlotLineOrBandAxis.js";import U from"../../Utilities.js";const{addEvent,arrayMax,arrayMin,defined,destroyObjectProperties,erase,fireEvent,merge,objectEach,pick}=U;class PlotLineOrBand{static compose(e,t){return addEvent(e,"afterInit",function(){this.labelCollectors.push(()=>{const e=[];for(const s of this.axes)for(var{label:t,options:i}of s.plotLinesAndBands)t&&!i?.label?.allowOverlap&&e.push(t);return e})}),PlotLineOrBandAxis.compose(PlotLineOrBand,t)}constructor(e,t){this.axis=e,this.options=t,this.id=t.id}render(){fireEvent(this,"render");const{axis:e,options:t}=this,{horiz:i,logarithmic:s}=e,{color:a,events:r,zIndex:n=0}=t,{renderer:d,time:l}=e.chart,o={},h=l.parse(t.to),c=l.parse(t.from),f=l.parse(t.value),p=t.borderWidth;let g=t.label,{label:x,svgElem:b}=this,y=[],m;const u=defined(c)&&defined(h),v=defined(f),L=!b,A={class:"highcharts-plot-"+(u?"band ":"line ")+(t.className||"")};var P=u?"bands":"lines";if(e.chart.styledMode||(v?(A.stroke=a||"#999999",A["stroke-width"]=pick(t.width,1),t.dashStyle&&(A.dashstyle=t.dashStyle)):u&&(A.fill=a||"#e6e9ff",p&&(A.stroke=t.borderColor,A["stroke-width"]=p))),P+="-"+(o.zIndex=n),(m=e.plotLinesAndBandsGroups[P])||(e.plotLinesAndBandsGroups[P]=m=d.g("plot-"+P).attr(o).add()),b||(this.svgElem=b=d.path().attr(A).add(m)),defined(f))y=e.getPlotLinePath({value:s?.log2lin(f)??f,lineWidth:b.strokeWidth(),acrossPanes:t.acrossPanes});else{if(!defined(c)||!defined(h))return;y=e.getPlotBandPath(s?.log2lin(c)??c,s?.log2lin(h)??h,t)}return!this.eventsAdded&&r&&(objectEach(r,(e,t)=>{b?.on(t,e=>{r[t].apply(this,[e])})}),this.eventsAdded=!0),!L&&b.d||!y?.length?b&&(y?(b.show(),b.animate({d:y})):b.d&&(b.hide(),x&&(this.label=x=x.destroy()))):b.attr({d:y}),g&&(defined(g.text)||defined(g.formatter))&&y?.length&&0<e.width&&0<e.height&&!y.isFlat?(g=merge({align:i&&u?"center":void 0,x:i?!u&&4:10,verticalAlign:!i&&u?"middle":void 0,y:i?u?16:10:u?6:-4,rotation:i&&!u?90:0,...u?{inside:!0}:{}},g),this.renderLabel(g,y,u,n)):x&&x.hide(),this}renderLabel(e,t,i,s){const a=this,r=a.axis,n=r.chart.renderer,d=e.inside;let l=a.label;l||(a.label=l=n.text(this.getLabelText(e),0,0,e.useHTML).attr({align:e.textAlign||e.align,rotation:e.rotation,class:"highcharts-plot-"+(i?"band":"line")+"-label "+(e.className||""),zIndex:s}),r.chart.styledMode||l.css(merge({fontSize:"0.8em",textOverflow:i&&!d?"":"ellipsis"},e.style)),l.add());var s=t.xBounds||[t[0][1],t[1][1],(i?t[2]:t[0])[1]],t=t.yBounds||[t[0][2],t[1][2],(i?t[2]:t[0])[2]],o=arrayMin(s),h=arrayMin(t),s=arrayMax(s)-o;l.align(e,!1,{x:o,y:h,width:s,height:arrayMax(t)-h}),l.alignAttr.y-=n.fontMetrics(l).b,l.alignValue&&"left"!==l.alignValue&&!defined(d)||l.css({width:(e.style?.width||(i&&d?s:90===l.rotation?r.height-(l.alignAttr.y-r.top):(e.clip?r.width:r.chart.chartWidth)-(l.alignAttr.x-r.left)))+"px"}),l.show(!0)}getLabelText(e){return defined(e.formatter)?e.formatter.call(this):e.text}destroy(){erase(this.axis.plotLinesAndBands,this),delete this.axis,destroyObjectProperties(this)}}export default PlotLineOrBand;