"use strict";import H from"../Core/Globals.js";const composed=H["composed"];import U from"../Core/Utilities.js";const{addEvent,pushUnique}=U;function compose(o){pushUnique(composed,"DragNodes")&&addEvent(o,"load",onChartLoad)}function onChartLoad(){const e=this;let o,t,s,i;e.container&&(o=addEvent(e.container,"mousedown",o=>{t&&t(),s&&s(),(i=e.hoverPoint)&&i.series&&i.series.hasDraggableNodes&&i.series.options.draggable&&(i.series.onMouseDown(i,o),t=addEvent(e.container,"mousemove",o=>i&&i.series&&i.series.onMouseMove(i,o)),s=addEvent(e.container.ownerDocument,"mouseup",o=>(t(),s(),i&&i.series&&i.series.onMouseUp(i,o))))})),addEvent(e,"destroy",function(){o()})}function onMouseDown(o,e){e=this.chart.pointer?.normalize(e)||e;o.fixedPosition={chartX:e.chartX,chartY:e.chartY,plotX:o.plotX,plotY:o.plotY},o.inDragMode=!0}function onMouseMove(o,e){if(o.fixedPosition&&o.inDragMode){const s=this.chart,i=s.pointer?.normalize(e)||e,n=o.fixedPosition.chartX-i.chartX,a=o.fixedPosition.chartY-i.chartY,r=s.graphLayoutsLookup;var t;(5<Math.abs(n)||5<Math.abs(a))&&(e=o.fixedPosition.plotX-n,t=o.fixedPosition.plotY-a,s.isInsidePlot(e,t)&&(o.plotX=e,o.plotY=t,o.hasDragged=!0,this.redrawHalo(o),r.forEach(o=>{o.restartSimulation()})))}}function onMouseUp(o){o.fixedPosition&&(o.hasDragged&&(this.layout.enableSimulation?this.layout.start():this.chart.redraw()),o.inDragMode=o.hasDragged=!1,this.options.fixedDraggable||delete o.fixedPosition)}function redrawHalo(o){o&&this.halo&&this.halo.attr({d:o.haloPath(this.options.states.hover.halo.size)})}const DragNodesComposition={compose:compose,onMouseDown:onMouseDown,onMouseMove:onMouseMove,onMouseUp:onMouseUp,redrawHalo:redrawHalo};export default DragNodesComposition;