import*as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from"../highcharts.src.js";var __webpack_require__={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},d:(e,t)=>{for(var o in t)__webpack_require__.o(t,o)&&!__webpack_require__.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const external_highcharts_src_js_default_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default;var external_highcharts_src_js_default_default=__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);function draw(e,t){const{animatableAttribs:o,onComplete:r,css:i,renderer:n}=t;var a=e.series&&e.series.chart.hasRendered?void 0:e.series&&e.series.options.animation;let s=e.graphic;if(t.attribs={...t.attribs,class:e.getClassName()},e.shouldDraw())s||(s="text"===t.shapeType?n.text():"image"===t.shapeType?n.image(t.imageUrl||"").attr(t.shapeArgs||{}):n[t.shapeType](t.shapeArgs||{}),(e.graphic=s).add(t.group)),i&&s.css(i),s.attr(t.attribs).animate(o,!t.isNew&&a,r);else if(s){const l=()=>{e.graphic=s=s&&s.destroy(),"function"==typeof r&&r()};Object.keys(o).length?s.animate(o,void 0,()=>l()):l()}}const DrawPointUtilities={draw:draw},Series_DrawPointUtilities=DrawPointUtilities,external_highcharts_src_js_default_SeriesRegistry_namespaceObject=__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__.default.SeriesRegistry;var external_highcharts_src_js_default_SeriesRegistry_default=__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);const{prototype:{pointClass:ColumnPoint}}=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["column"],extend=external_highcharts_src_js_default_default()["extend"];class WordcloudPoint extends ColumnPoint{isValid(){return!0}}extend(WordcloudPoint.prototype,{weight:1});const Wordcloud_WordcloudPoint=WordcloudPoint,WordcloudSeriesDefaults={allowExtendPlayingField:!0,animation:{duration:500},borderWidth:0,clip:!1,colorByPoint:!0,cropThreshold:1/0,minFontSize:1,maxFontSize:25,placementStrategy:"center",rotation:{from:0,orientations:2,to:90},showInLegend:!1,spiral:"rectangular",style:{fontFamily:"sans-serif",fontWeight:"900",whiteSpace:"nowrap"},tooltip:{followPointer:!0,pointFormat:'<span style="color:{point.color}">‚óè</span> {series.name}: <b>{point.weight}</b><br/>'}},Wordcloud_WordcloudSeriesDefaults=WordcloudSeriesDefaults,deg2rad=external_highcharts_src_js_default_default()["deg2rad"],{extend:WordcloudUtils_extend,find,isNumber,isObject,merge}=external_highcharts_src_js_default_default();function isRectanglesIntersecting(e,t){return!(t.left>e.right||t.right<e.left||t.top>e.bottom||t.bottom<e.top)}function getNormals(e,t){var o=t[0]-e[0],t=t[1]-e[1];return[[-t,o],[t,-o]]}function getAxesFromPolygon(e){let t,i=e.axes||[];return i.length||(i=[],t=t=e.concat([e[0]]),t.reduce((e,t)=>{const o=getNormals(e,t),r=o[0];return find(i,e=>e[0]===r[0]&&e[1]===r[1])||i.push(r),t}),e.axes=i),i}function project(e,o){e=e.map(e=>{var t=e[0],e=e[1];return t*o[0]+e*o[1]});return{min:Math.min.apply(this,e),max:Math.max.apply(this,e)}}function isPolygonsOverlappingOnAxis(e,t,o){t=project(t,e),o=project(o,e);return!!(o.min>t.max||o.max<t.min)}function isPolygonsColliding(t,o){const e=getAxesFromPolygon(t),r=getAxesFromPolygon(o),i=e.concat(r),n=!find(i,e=>isPolygonsOverlappingOnAxis(e,t,o));return n}function intersectsAnyWord(o,e){function r(e){let t=isRectanglesIntersecting(i,e.rect);return t=t&&(o.rotation%90||e.rotation%90)?isPolygonsColliding(n,e.polygon):t}const i=o.rect,n=o.polygon,t=o.lastCollidedWith;let a=!1;return t&&!(a=r(t))&&delete o.lastCollidedWith,a=a||!!find(e,function(e){var t=r(e);return t&&(o.lastCollidedWith=e),t})}function archimedeanSpiral(e,t){var t=t.field,t=t.width*t.width+t.height*t.height,o=.8*e;let r=!1;return e<=1e4&&(r={x:o*Math.cos(o),y:o*Math.sin(o)},Math.min(Math.abs(r.x),Math.abs(r.y))<t||(r=!1)),r}function squareSpiral(e,t){var o=4*e,r=Math.ceil((Math.sqrt(o)-1)/2),i=e=>"boolean"==typeof e;let n=2*r+1,a=Math.pow(n,2),s=!1;return--n,e<=1e4&&(i(s)&&o>=a-n&&(s={x:r-(a-o),y:-r}),a-=n,i(s)&&o>=a-n&&(s={x:-r,y:-r+(a-o)}),a-=n,(s=i(s)?o>=a-n?{x:-r+(a-o),y:r}:{x:r,y:r-(a-o-n)}:s).x*=5,s.y*=5),s}function rectangularSpiral(e,t){const o=squareSpiral(e,t),r=t.field;return o&&(o.x*=r.ratioX,o.y*=r.ratioY),o}function getRandomPosition(e){return Math.round(e*(Math.random()+.5)/2)}function getScale(e,t,o){var r=2*Math.max(Math.abs(o.top),Math.abs(o.bottom)),o=2*Math.max(Math.abs(o.left),Math.abs(o.right));return Math.min(0<o?1/o*e:1,0<r?1/r*t:1)}function getPlayingField(e,t,o){var o=o.reduce(function(e,t){var t=t.dimensions,o=Math.max(t.width,t.height);return e.maxHeight=Math.max(e.maxHeight,t.height),e.maxWidth=Math.max(e.maxWidth,t.width),e.area+=o*o,e},{maxHeight:0,maxWidth:0,area:0}),o=Math.max(o.maxHeight,o.maxWidth,.85*Math.sqrt(o.area)),r=t<e?e/t:1,t=e<t?t/e:1;return{width:o*r,height:o*t,ratioX:r,ratioY:t}}function getRotation(e,t,o,r){let i=!1;return i=isNumber(e)&&isNumber(t)&&isNumber(o)&&isNumber(r)&&0<e&&-1<t&&o<r?o+t%e*((r-o)/(e-1||1)):i}function getSpiral(t,o){const r=[];for(let e=1;e<1e4;e++)r.push(t(e,o));return e=>e<=1e4&&r[e-1]}function outsidePlayingField(e,t){const o=-t.width/2,r=t.width/2,i=-t.height/2,n=t.height/2;return!(o<e.left&&r>e.right&&i<e.top&&n>e.bottom)}function movePolygon(t,o,e){return e.map(function(e){return[e[0]+t,e[1]+o]})}function intersectionTesting(e,t){const o=t.placed,r=t.field,i=t.rectangle,n=t.polygon,a=t.spiral,s=e.rect=WordcloudUtils_extend({},i);let l=1,d={x:0,y:0};for(e.polygon=n,e.rotation=t.rotation;!1!==d&&(intersectsAnyWord(e,o)||outsidePlayingField(s,r));)d=a(l),isObject(d)&&(s.left=i.left+d.x,s.right=i.right+d.x,s.top=i.top+d.y,s.bottom=i.bottom+d.y,e.polygon=movePolygon(d.x,d.y,n)),l++;return d}function extendPlayingField(e,t){let o,r,i,n,a,s,l,d;return d=isObject(e)&&isObject(t)?(o=t.bottom-t.top,r=t.right-t.left,i=e.ratioX,s=(a=o*(n=e.ratioY)<r*i?r:o)*i,l=a*n,merge(e,{width:e.width+2*s,height:e.height+2*l})):e}function updateFieldBoundaries(e,t){return(!isNumber(e.left)||e.left>t.left)&&(e.left=t.left),(!isNumber(e.right)||e.right<t.right)&&(e.right=t.right),(!isNumber(e.top)||e.top>t.top)&&(e.top=t.top),(!isNumber(e.bottom)||e.bottom<t.bottom)&&(e.bottom=t.bottom),e}function correctFloat(e,t){t=isNumber(t)?t:14,t=Math.pow(10,t);return Math.round(e*t)/t}function getBoundingBoxFromPolygon(e){return e.reduce(function(e,t){var o=t[0],t=t[1];return e.left=Math.min(o,e.left),e.right=Math.max(o,e.right),e.bottom=Math.max(t,e.bottom),e.top=Math.min(t,e.top),e},{left:Number.MAX_VALUE,right:-Number.MAX_VALUE,bottom:-Number.MAX_VALUE,top:Number.MAX_VALUE})}function getPolygon(e,t,o,r,i){const n=[e,t],a=e-o/2,s=e+o/2,l=t-r/2,d=t+r/2,c=[[a,l],[s,l],[s,d],[a,d]];return c.map(function(e){return rotate2DToPoint(e,n,-i)})}function rotate2DToOrigin(e,t){var o=e[0],e=e[1],t=deg2rad*-t,r=Math.cos(t),t=Math.sin(t);return[correctFloat(o*r-e*t),correctFloat(o*t+e*r)]}function rotate2DToPoint(e,t,o){e=rotate2DToOrigin([e[0]-t[0],e[1]-t[1]],o);return[e[0]+t[0],e[1]+t[1]]}const WordcloudUtils={archimedeanSpiral:archimedeanSpiral,extendPlayingField:extendPlayingField,getBoundingBoxFromPolygon:getBoundingBoxFromPolygon,getPlayingField:getPlayingField,getPolygon:getPolygon,getRandomPosition:getRandomPosition,getRotation:getRotation,getScale:getScale,getSpiral:getSpiral,intersectionTesting:intersectionTesting,isPolygonsColliding:isPolygonsColliding,isRectanglesIntersecting:isRectanglesIntersecting,rectangularSpiral:rectangularSpiral,rotate2DToOrigin:rotate2DToOrigin,rotate2DToPoint:rotate2DToPoint,squareSpiral:squareSpiral,updateFieldBoundaries:updateFieldBoundaries},Wordcloud_WordcloudUtils=WordcloudUtils,noop=external_highcharts_src_js_default_default()["noop"],ColumnSeries=external_highcharts_src_js_default_SeriesRegistry_default().seriesTypes["column"],{extend:WordcloudSeries_extend,isArray,isNumber:WordcloudSeries_isNumber,isObject:WordcloudSeries_isObject,merge:WordcloudSeries_merge}=external_highcharts_src_js_default_default(),{archimedeanSpiral:WordcloudSeries_archimedeanSpiral,extendPlayingField:WordcloudSeries_extendPlayingField,getBoundingBoxFromPolygon:WordcloudSeries_getBoundingBoxFromPolygon,getPlayingField:WordcloudSeries_getPlayingField,getPolygon:WordcloudSeries_getPolygon,getRandomPosition:WordcloudSeries_getRandomPosition,getRotation:WordcloudSeries_getRotation,getScale:WordcloudSeries_getScale,getSpiral:WordcloudSeries_getSpiral,intersectionTesting:WordcloudSeries_intersectionTesting,isPolygonsColliding:WordcloudSeries_isPolygonsColliding,rectangularSpiral:WordcloudSeries_rectangularSpiral,rotate2DToOrigin:WordcloudSeries_rotate2DToOrigin,rotate2DToPoint:WordcloudSeries_rotate2DToPoint,squareSpiral:WordcloudSeries_squareSpiral,updateFieldBoundaries:WordcloudSeries_updateFieldBoundaries}=Wordcloud_WordcloudUtils;class WordcloudSeries extends ColumnSeries{pointAttribs(e,t){const o=external_highcharts_src_js_default_default().seriesTypes.column.prototype.pointAttribs.call(this,e,t);return delete o.stroke,delete o["stroke-width"],o}deriveFontSize(e,t,o){e=WordcloudSeries_isNumber(e)?e:0,t=WordcloudSeries_isNumber(t)?t:1,o=WordcloudSeries_isNumber(o)?o:1;return Math.floor(Math.max(o,e*t))}drawPoints(){const o=this,r=o.hasRendered,e=o.xAxis,t=o.yAxis,i=o.chart,n=o.group,a=o.options,s=a.animation,l=a.allowExtendPlayingField,d=i.renderer,c=[],u=o.placementStrategy[a.placementStrategy],g=a.rotation,h=o.points.map(function(e){return e.weight}),_=Math.max.apply(null,h),p=o.points.concat().sort((e,t)=>t.weight-e.weight);let m=d.text().add(n),f;o.group.attr({scaleX:1,scaleY:1});for(const W of p){var x=1/_*W.weight,x=o.deriveFontSize(x,a.maxFontSize,a.minFontSize),x=WordcloudSeries_extend({fontSize:x+"px"},a.style),x=(m.css(x).attr({x:0,y:0,text:W.name}),m.getBBox(!0));W.dimensions={height:x.height,width:x.width}}f=WordcloudSeries_getPlayingField(e.len,t.len,p);var y=WordcloudSeries_getSpiral(o.spirals[a.spiral],{field:f});for(const b of p){const P=1/_*b.weight,w=o.deriveFontSize(P,a.maxFontSize,a.minFontSize),F=WordcloudSeries_extend({fontSize:w+"px"},a.style),M=u(b,{data:p,field:f,placed:c,rotation:g}),j=WordcloudSeries_extend(o.pointAttribs(b,b.selected&&"select"),{align:"center","alignment-baseline":"middle","dominant-baseline":"middle",x:M.x,y:M.y,text:b.name,rotation:WordcloudSeries_isNumber(M.rotation)?M.rotation:void 0}),A=WordcloudSeries_getPolygon(M.x,M.y,b.dimensions.width,b.dimensions.height,M.rotation),T=WordcloudSeries_getBoundingBoxFromPolygon(A);let e=WordcloudSeries_intersectionTesting(b,{rectangle:T,polygon:A,field:f,placed:c,spiral:y,rotation:M.rotation}),t;!e&&l&&(f=WordcloudSeries_extendPlayingField(f,T),e=WordcloudSeries_intersectionTesting(b,{rectangle:T,polygon:A,field:f,placed:c,spiral:y,rotation:M.rotation})),WordcloudSeries_isObject(e)?(j.x=(j.x||0)+e.x,j.y=(j.y||0)+e.y,T.left+=e.x,T.right+=e.x,T.top+=e.y,T.bottom+=e.y,f=WordcloudSeries_updateFieldBoundaries(f,T),c.push(b),b.isNull=!1,b.isInside=!0):b.isNull=!0,s&&(t={x:j.x,y:j.y},r?(delete j.x,delete j.y):(j.x=0,j.y=0)),Series_DrawPointUtilities.draw(b,{animatableAttribs:t,attribs:j,css:F,group:n,renderer:d,shapeArgs:void 0,shapeType:"text"})}m=m.destroy();var S=WordcloudSeries_getScale(e.len,t.len,f);o.group.attr({scaleX:S,scaleY:S})}hasData(){return WordcloudSeries_isObject(this)&&!0===this.visible&&isArray(this.points)&&0<this.points.length}getPlotBox(){var e=this.chart,t=e.inverted,o=this[t?"yAxis":"xAxis"],t=this[t?"xAxis":"yAxis"],r=o?o.len:e.plotWidth,i=t?t.len:e.plotHeight;return{translateX:(o?o.left:e.plotLeft)+r/2,translateY:(t?t.top:e.plotTop)+i/2,scaleX:1,scaleY:1}}}WordcloudSeries.defaultOptions=WordcloudSeries_merge(ColumnSeries.defaultOptions,Wordcloud_WordcloudSeriesDefaults),WordcloudSeries_extend(WordcloudSeries.prototype,{animate:noop,animateDrilldown:noop,animateDrillupFrom:noop,isCartesian:!1,pointClass:Wordcloud_WordcloudPoint,setClip:noop,placementStrategy:{random:function(e,t){var o=t.field,t=t.rotation;return{x:WordcloudSeries_getRandomPosition(o.width)-o.width/2,y:WordcloudSeries_getRandomPosition(o.height)-o.height/2,rotation:WordcloudSeries_getRotation(t.orientations,e.index,t.from,t.to)}},center:function(e,t){t=t.rotation;return{x:0,y:0,rotation:WordcloudSeries_getRotation(t.orientations,e.index,t.from,t.to)}}},pointArrayMap:["weight"],spirals:{archimedean:WordcloudSeries_archimedeanSpiral,rectangular:WordcloudSeries_rectangularSpiral,square:WordcloudSeries_squareSpiral},utils:{extendPlayingField:WordcloudSeries_extendPlayingField,getRotation:WordcloudSeries_getRotation,isPolygonsColliding:WordcloudSeries_isPolygonsColliding,rotate2DToOrigin:WordcloudSeries_rotate2DToOrigin,rotate2DToPoint:WordcloudSeries_rotate2DToPoint}}),external_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType("wordcloud",WordcloudSeries);const Wordcloud_WordcloudSeries=null,wordcloud_src=external_highcharts_src_js_default_default();export{wordcloud_src as default};